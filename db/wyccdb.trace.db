2017-01-15 00:58:42 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.openConnection(JDBCDataSource.java:159)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:73)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.<init>(JDBCDataSource.java:99)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:84)
	at org.jkiss.dbeaver.ext.generic.model.meta.GenericMetaModel.createDataSource(GenericMetaModel.java:86)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:153)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:702)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:74)
	at org.jkiss.dbeaver.ui.dialogs.connection.ConnectionWizard$ConnectionTester.run(ConnectionWizard.java:222)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 32 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 27 more
2017-01-15 01:22:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: IO Exception: "IOException reading ""+file+"""; SQL statement:
INSERT INTO MVT SELECT * FROM CSVREAD('"+file+"', null, 'charset=UTF-8 fieldSeparator=|') [90028-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.tools.Csv.convertException(Csv.java:598)
	at org.h2.tools.Csv.read(Csv.java:197)
	at org.h2.expression.Function.getValueForColumnList(Function.java:2705)
	at org.h2.table.FunctionTable.<init>(FunctionTable.java:66)
	at org.h2.command.Parser.readTableFilter(Parser.java:1249)
	at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1897)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2045)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parseInsert(Parser.java:1111)
	at org.h2.command.Parser.parsePrepared(Parser.java:413)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.io.FileNotFoundException: "+file+" (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at org.h2.store.fs.FilePathDisk.newInputStream(FilePathDisk.java:321)
	at org.h2.store.fs.FileUtils.newInputStream(FileUtils.java:218)
	at org.h2.tools.Csv.initRead(Csv.java:316)
	at org.h2.tools.Csv.readResultSet(Csv.java:219)
	at org.h2.tools.Csv.read(Csv.java:195)
	... 26 more
2017-01-15 01:23:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO MVT SELECT * FROM CSVREAD('/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/documentstest/documentstest6', null, 'charset=UTF-8 fieldSeparator=|') [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:24:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO MVT SELECT * FROM CSVREAD('/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/documentstest/documentstest6', null, 'charset=UTF-8 fieldSeparator=;') [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:27:27 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:243)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-15 01:28:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO MVT SELECT * FROM CSVREAD('/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/./documentstest/documentstest8', null, 'charset=UTF-8 fieldSeparator=;') [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:126)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:251)
2017-01-15 01:35:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
CREATE TABLE PUBLIC.MVT (
	Structure_name VARCHAR(2147483647),
	Certificate VARCHAR(2147483647),
	Certificate_start VARCHAR(2147483647),
	Certificate_renewal VARCHAR(2147483647),
	Certificate_cancellation VARCHAR(2147483647),
	Amendment_start VARCHAR(2147483647),
	Amendment_end VARCHAR(2147483647),
	Wycc_ID VARCHAR(2147483647),
	Claims_manager_ID VARCHAR(2147483647),
	Gender VARCHAR(2147483647),
	Name VARCHAR(2147483647),
	First_name VARCHAR(2147483647),
	Date_of_birth VARCHAR(2147483647),
	Email VARCHAR(2147483647),
	Position_type VARCHAR(2147483647),
	Position VARCHAR(2147483647),
	Monthly_salary VARCHAR(2147483647),
	Salary_currency VARCHAR(2147483647),
	Period VARCHAR(2147483647),
	Day(s) VARCHAR(2147483647),
	Month(s) VARCHAR(2147483647),
	Family_covered VARCHAR(2147483647),
	Retirement_plan VARCHAR(2147483647),
	Start_movement VARCHAR(2147483647),
	End_movement VARCHAR(2147483647),
	Employer VARCHAR(2147483647),
	Child(ren) VARCHAR(2147483647),
	Country VARCHAR(2147483647),
	Nationality VARCHAR(2147483647),
	Company1 VARCHAR(2147483647),
	Formula1 VARCHAR(2147483647),
	Policy_number1 VARCHAR(2147483647),
	Currency1 VARCHAR(2147483647),
	Excess1 VARCHAR(2147483647),
	Duration1 VARCHAR(2147483647),
	Total_amount_insured1 VARCHAR(2147483647),
	Cie_HT_Basis1 VARCHAR(2147483647),
	Company2 VARCHAR(2147483647),
	Formula2 VARCHAR(2147483647),
	Policy_number2 VARCHAR(2147483647),
	Currency2 VARCHAR(2147483647),
	Excess2 VARCHAR(2147483647),
	Duration2 VARCHAR(2147483647),
	Total_amount_insured2 VARCHAR(2147483647),
	Cie_HT_Basis2 VARCHAR(2147483647),
	Company3 VARCHAR(2147483647),
	Formula3 VARCHAR(2147483647),
	Policy_number3 VARCHAR(2147483647),
	Currency3 VARCHAR(2147483647),
	Excess3 VARCHAR(2147483647),
	Duration3 VARCHAR(2147483647),
	Total_amount_insured3 VARCHAR(2147483647),
	Cie_HT_Basis3 VARCHAR(2147483647),
	Company4 VARCHAR(2147483647),
	Formula4 VARCHAR(2147483647),
	Policy_number4 VARCHAR(2147483647),
	Currency4 VARCHAR(2147483647),
	Excess4 VARCHAR(2147483647),
	Duration4 VARCHAR(2147483647),
	Total_amount_insured4 VARCHAR(2147483647),
	Cie_HT_Basis4 VARCHAR(2147483647),
	Company5 VARCHAR(2147483647),
	Formula5 VARCHAR(2147483647),
	Policy_number5 VARCHAR(2147483647),
	Currency5 VARCHAR(2147483647),
	Excess5 VARCHAR(2147483647),
	Duration5 VARCHAR(2147483647),
	Total_amount_insured5 VARCHAR(2147483647),
	Cie_HT_Basis5 VARCHAR(2147483647),
	Company6 VARCHAR(2147483647),
	Formula VARCHAR(2147483647),
	Policy_number6 VARCHAR(2147483647),
	Currency6 VARCHAR(2147483647),
	Excess6 VARCHAR(2147483647),
	Duration6 VARCHAR(2147483647),
	Total_amount_insured6 VARCHAR(2147483647),
	Cie_HT_Basis6 VARCHAR(2147483647),
	Company7 VARCHAR(2147483647),
	Formula7 VARCHAR(2147483647),
	Policy_number7 VARCHAR(2147483647),
	Currency7 VARCHAR(2147483647),
	Excess67 VARCHAR(2147483647),
	Duration7 VARCHAR(2147483647),
	Total_amount_insured7 VARCHAR(2147483647),
	Cie_HT_Basis7 VARCHAR(2147483647),
	Company8 VARCHAR(2147483647),
	Formula8 VARCHAR(2147483647),
	Policy_number8 VARCHAR(2147483647),
	Currency8 VARCHAR(2147483647),
	Excess8 VARCHAR(2147483647),
	Duration8 VARCHAR(2147483647),
	Total_amount_insured8 VARCHAR(2147483647),
	Cie_HT_Basis8 VARCHAR(2147483647)
) [50004-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4080)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3938)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5977)
	at org.h2.command.Parser.parseCreate(Parser.java:4238)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:35:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
CREATE TABLE PUBLIC.MVT (
	Structure_name VARCHAR(2147483647),
	Certificate VARCHAR(2147483647),
	Certificate_start VARCHAR(2147483647),
	Certificate_renewal VARCHAR(2147483647),
	Certificate_cancellation VARCHAR(2147483647),
	Amendment_start VARCHAR(2147483647),
	Amendment_end VARCHAR(2147483647),
	Wycc_ID VARCHAR(2147483647),
	Claims_manager_ID VARCHAR(2147483647),
	Gender VARCHAR(2147483647),
	Name VARCHAR(2147483647),
	First_name VARCHAR(2147483647),
	Date_of_birth VARCHAR(2147483647),
	Email VARCHAR(2147483647),
	Position_type VARCHAR(2147483647),
	Position VARCHAR(2147483647),
	Monthly_salary VARCHAR(2147483647),
	Salary_currency VARCHAR(2147483647),
	Period VARCHAR(2147483647),
	Day(s) VARCHAR(2147483647),
	Month(s) VARCHAR(2147483647),
	Family_covered VARCHAR(2147483647),
	Retirement_plan VARCHAR(2147483647),
	Start_movement VARCHAR(2147483647),
	End_movement VARCHAR(2147483647),
	Employer VARCHAR(2147483647),
	Child(ren) VARCHAR(2147483647),
	Country VARCHAR(2147483647),
	Nationality VARCHAR(2147483647),
	Company1 VARCHAR(2147483647),
	Formula1 VARCHAR(2147483647),
	Policy_number1 VARCHAR(2147483647),
	Currency1 VARCHAR(2147483647),
	Excess1 VARCHAR(2147483647),
	Duration1 VARCHAR(2147483647),
	Total_amount_insured1 VARCHAR(2147483647),
	Cie_HT_Basis1 VARCHAR(2147483647),
	Company2 VARCHAR(2147483647),
	Formula2 VARCHAR(2147483647),
	Policy_number2 VARCHAR(2147483647),
	Currency2 VARCHAR(2147483647),
	Excess2 VARCHAR(2147483647),
	Duration2 VARCHAR(2147483647),
	Total_amount_insured2 VARCHAR(2147483647),
	Cie_HT_Basis2 VARCHAR(2147483647),
	Company3 VARCHAR(2147483647),
	Formula3 VARCHAR(2147483647),
	Policy_number3 VARCHAR(2147483647),
	Currency3 VARCHAR(2147483647),
	Excess3 VARCHAR(2147483647),
	Duration3 VARCHAR(2147483647),
	Total_amount_insured3 VARCHAR(2147483647),
	Cie_HT_Basis3 VARCHAR(2147483647),
	Company4 VARCHAR(2147483647),
	Formula4 VARCHAR(2147483647),
	Policy_number4 VARCHAR(2147483647),
	Currency4 VARCHAR(2147483647),
	Excess4 VARCHAR(2147483647),
	Duration4 VARCHAR(2147483647),
	Total_amount_insured4 VARCHAR(2147483647),
	Cie_HT_Basis4 VARCHAR(2147483647),
	Company5 VARCHAR(2147483647),
	Formula5 VARCHAR(2147483647),
	Policy_number5 VARCHAR(2147483647),
	Currency5 VARCHAR(2147483647),
	Excess5 VARCHAR(2147483647),
	Duration5 VARCHAR(2147483647),
	Total_amount_insured5 VARCHAR(2147483647),
	Cie_HT_Basis5 VARCHAR(2147483647),
	Company6 VARCHAR(2147483647),
	Formula VARCHAR(2147483647),
	Policy_number6 VARCHAR(2147483647),
	Currency6 VARCHAR(2147483647),
	Excess6 VARCHAR(2147483647),
	Duration6 VARCHAR(2147483647),
	Total_amount_insured6 VARCHAR(2147483647),
	Cie_HT_Basis6 VARCHAR(2147483647),
	Company7 VARCHAR(2147483647),
	Formula7 VARCHAR(2147483647),
	Policy_number7 VARCHAR(2147483647),
	Currency7 VARCHAR(2147483647),
	Excess67 VARCHAR(2147483647),
	Duration7 VARCHAR(2147483647),
	Total_amount_insured7 VARCHAR(2147483647),
	Cie_HT_Basis7 VARCHAR(2147483647),
	Company8 VARCHAR(2147483647),
	Formula8 VARCHAR(2147483647),
	Policy_number8 VARCHAR(2147483647),
	Currency8 VARCHAR(2147483647),
	Excess8 VARCHAR(2147483647),
	Duration8 VARCHAR(2147483647),
	Total_amount_insured8 VARCHAR(2147483647),
	Cie_HT_Basis8 VARCHAR(2147483647)
) [50004-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4080)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3938)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5977)
	at org.h2.command.Parser.parseCreate(Parser.java:4238)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:36:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
CREATE TABLE PUBLIC.MVT (
	Structure_name VARCHAR(2147483647),
	Certificate VARCHAR(2147483647),
	Certificate_start VARCHAR(2147483647),
	Certificate_renewal VARCHAR(2147483647),
	Certificate_cancellation VARCHAR(2147483647),
	Amendment_start VARCHAR(2147483647),
	Amendment_end VARCHAR(2147483647),
	Wycc_ID VARCHAR(2147483647),
	Claims_manager_ID VARCHAR(2147483647),
	Gender VARCHAR(2147483647),
	Name VARCHAR(2147483647),
	First_name VARCHAR(2147483647),
	Date_of_birth VARCHAR(2147483647),
	Email VARCHAR(2147483647),
	Position_type VARCHAR(2147483647),
	Position VARCHAR(2147483647),
	Monthly_salary VARCHAR(2147483647),
	Salary_currency VARCHAR(2147483647),
	Period VARCHAR(2147483647),
	Day(s) VARCHAR(2147483647),
	Month(s) VARCHAR(2147483647),
	Family_covered VARCHAR(2147483647),
	Retirement_plan VARCHAR(2147483647),
	Start_movement VARCHAR(2147483647),
	End_movement VARCHAR(2147483647),
	Employer VARCHAR(2147483647),
	Child(ren) VARCHAR(2147483647),
	Country VARCHAR(2147483647),
	Nationality VARCHAR(2147483647),
	Company1 VARCHAR(2147483647),
	Formula1 VARCHAR(2147483647),
	Policy_number1 VARCHAR(2147483647),
	Currency1 VARCHAR(2147483647),
	Excess1 VARCHAR(2147483647),
	Duration1 VARCHAR(2147483647),
	Total_amount_insured1 VARCHAR(2147483647),
	Cie_HT_Basis1 VARCHAR(2147483647),
	Company2 VARCHAR(2147483647),
	Formula2 VARCHAR(2147483647),
	Policy_number2 VARCHAR(2147483647),
	Currency2 VARCHAR(2147483647),
	Excess2 VARCHAR(2147483647),
	Duration2 VARCHAR(2147483647),
	Total_amount_insured2 VARCHAR(2147483647),
	Cie_HT_Basis2 VARCHAR(2147483647),
	Company3 VARCHAR(2147483647),
	Formula3 VARCHAR(2147483647),
	Policy_number3 VARCHAR(2147483647),
	Currency3 VARCHAR(2147483647),
	Excess3 VARCHAR(2147483647),
	Duration3 VARCHAR(2147483647),
	Total_amount_insured3 VARCHAR(2147483647),
	Cie_HT_Basis3 VARCHAR(2147483647),
	Company4 VARCHAR(2147483647),
	Formula4 VARCHAR(2147483647),
	Policy_number4 VARCHAR(2147483647),
	Currency4 VARCHAR(2147483647),
	Excess4 VARCHAR(2147483647),
	Duration4 VARCHAR(2147483647),
	Total_amount_insured4 VARCHAR(2147483647),
	Cie_HT_Basis4 VARCHAR(2147483647),
	Company5 VARCHAR(2147483647),
	Formula5 VARCHAR(2147483647),
	Policy_number5 VARCHAR(2147483647),
	Currency5 VARCHAR(2147483647),
	Excess5 VARCHAR(2147483647),
	Duration5 VARCHAR(2147483647),
	Total_amount_insured5 VARCHAR(2147483647),
	Cie_HT_Basis5 VARCHAR(2147483647),
	Company6 VARCHAR(2147483647),
	Formula VARCHAR(2147483647),
	Policy_number6 VARCHAR(2147483647),
	Currency6 VARCHAR(2147483647),
	Excess6 VARCHAR(2147483647),
	Duration6 VARCHAR(2147483647),
	Total_amount_insured6 VARCHAR(2147483647),
	Cie_HT_Basis6 VARCHAR(2147483647),
	Company7 VARCHAR(2147483647),
	Formula7 VARCHAR(2147483647),
	Policy_number7 VARCHAR(2147483647),
	Currency7 VARCHAR(2147483647),
	Excess67 VARCHAR(2147483647),
	Duration7 VARCHAR(2147483647),
	Total_amount_insured7 VARCHAR(2147483647),
	Cie_HT_Basis7 VARCHAR(2147483647),
	Company8 VARCHAR(2147483647),
	Formula8 VARCHAR(2147483647),
	Policy_number8 VARCHAR(2147483647),
	Currency8 VARCHAR(2147483647),
	Excess8 VARCHAR(2147483647),
	Duration8 VARCHAR(2147483647),
	Total_amount_insured8 VARCHAR(2147483647),
	Cie_HT_Basis8 VARCHAR(2147483647)
) [50004-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4080)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3938)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5977)
	at org.h2.command.Parser.parseCreate(Parser.java:4238)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:37:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
CREATE TABLE PUBLIC.MVT (
	Structure_name VARCHAR(2147483647),
	Certificate VARCHAR(2147483647),
	Certificate_start VARCHAR(2147483647),
	Certificate_renewal VARCHAR(2147483647),
	Certificate_cancellation VARCHAR(2147483647),
	Amendment_start VARCHAR(2147483647),
	Amendment_end VARCHAR(2147483647),
	Wycc_ID VARCHAR(2147483647),
	Claims_manager_ID VARCHAR(2147483647),
	Gender VARCHAR(2147483647),
	Name VARCHAR(2147483647),
	First_name VARCHAR(2147483647),
	Date_of_birth VARCHAR(2147483647),
	Email VARCHAR(2147483647),
	Position_type VARCHAR(2147483647),
	Positioncrew VARCHAR(2147483647),
	Monthly_salary VARCHAR(2147483647),
	Salary_currency VARCHAR(2147483647),
	Period VARCHAR(2147483647),
	Days VARCHAR(2147483647),
	Months VARCHAR(2147483647),
	Family_covered VARCHAR(2147483647),
	Retirement_plan VARCHAR(2147483647),
	Start_movement VARCHAR(2147483647),
	End_movement VARCHAR(2147483647),
	Employer VARCHAR(2147483647),
	Child(ren) VARCHAR(2147483647),
	Country VARCHAR(2147483647),
	Nationality VARCHAR(2147483647),
	Company1 VARCHAR(2147483647),
	Formula1 VARCHAR(2147483647),
	Policy_number1 VARCHAR(2147483647),
	Currency1 VARCHAR(2147483647),
	Excess1 VARCHAR(2147483647),
	Duration1 VARCHAR(2147483647),
	Total_amount_insured1 VARCHAR(2147483647),
	Cie_HT_Basis1 VARCHAR(2147483647),
	Company2 VARCHAR(2147483647),
	Formula2 VARCHAR(2147483647),
	Policy_number2 VARCHAR(2147483647),
	Currency2 VARCHAR(2147483647),
	Excess2 VARCHAR(2147483647),
	Duration2 VARCHAR(2147483647),
	Total_amount_insured2 VARCHAR(2147483647),
	Cie_HT_Basis2 VARCHAR(2147483647),
	Company3 VARCHAR(2147483647),
	Formula3 VARCHAR(2147483647),
	Policy_number3 VARCHAR(2147483647),
	Currency3 VARCHAR(2147483647),
	Excess3 VARCHAR(2147483647),
	Duration3 VARCHAR(2147483647),
	Total_amount_insured3 VARCHAR(2147483647),
	Cie_HT_Basis3 VARCHAR(2147483647),
	Company4 VARCHAR(2147483647),
	Formula4 VARCHAR(2147483647),
	Policy_number4 VARCHAR(2147483647),
	Currency4 VARCHAR(2147483647),
	Excess4 VARCHAR(2147483647),
	Duration4 VARCHAR(2147483647),
	Total_amount_insured4 VARCHAR(2147483647),
	Cie_HT_Basis4 VARCHAR(2147483647),
	Company5 VARCHAR(2147483647),
	Formula5 VARCHAR(2147483647),
	Policy_number5 VARCHAR(2147483647),
	Currency5 VARCHAR(2147483647),
	Excess5 VARCHAR(2147483647),
	Duration5 VARCHAR(2147483647),
	Total_amount_insured5 VARCHAR(2147483647),
	Cie_HT_Basis5 VARCHAR(2147483647),
	Company6 VARCHAR(2147483647),
	Formula VARCHAR(2147483647),
	Policy_number6 VARCHAR(2147483647),
	Currency6 VARCHAR(2147483647),
	Excess6 VARCHAR(2147483647),
	Duration6 VARCHAR(2147483647),
	Total_amount_insured6 VARCHAR(2147483647),
	Cie_HT_Basis6 VARCHAR(2147483647),
	Company7 VARCHAR(2147483647),
	Formula7 VARCHAR(2147483647),
	Policy_number7 VARCHAR(2147483647),
	Currency7 VARCHAR(2147483647),
	Excess67 VARCHAR(2147483647),
	Duration7 VARCHAR(2147483647),
	Total_amount_insured7 VARCHAR(2147483647),
	Cie_HT_Basis7 VARCHAR(2147483647),
	Company8 VARCHAR(2147483647),
	Formula8 VARCHAR(2147483647),
	Policy_number8 VARCHAR(2147483647),
	Currency8 VARCHAR(2147483647),
	Excess8 VARCHAR(2147483647),
	Duration8 VARCHAR(2147483647),
	Total_amount_insured8 VARCHAR(2147483647),
	Cie_HT_Basis8 VARCHAR(2147483647)
) [50004-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4080)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3938)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5977)
	at org.h2.command.Parser.parseCreate(Parser.java:4238)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:43:00 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:243)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-15 01:46:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "END_MOVEMENT" must be in the GROUP BY list; SQL statement:
SELECT WYCC_ID,END_MOVEMENT-START_MOVEMENT FROM MVT
GROUP BY WYCC_ID [90016-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:169)
	at org.h2.expression.Operation.updateAggregate(Operation.java:387)
	at org.h2.command.dml.Select.queryGroup(Select.java:365)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:650)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:47:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Function "TO_DATE": Invalid date format: " Tried to parse one of '[déc., juin, mai, févr., mars, août, nov., janv., avr., juil., sept., oct.]' but failed (may be an internal error?). Details: 
    TO_DATE('18/01/2016', 'DD MON YYYY')
                ^       ,     ^ <-- Parsing failed at this point"; SQL statement:
SELECT WYCC_ID,TO_DATE(END_MOVEMENT)-TO_DATE(START_MOVEMENT) FROM MVT [90056-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.util.ToDateTokenizer.throwException(ToDateTokenizer.java:529)
	at org.h2.util.ToDateTokenizer.setByName(ToDateTokenizer.java:515)
	at org.h2.util.ToDateTokenizer$MonthParslet.parse(ToDateTokenizer.java:264)
	at org.h2.util.ToDateTokenizer$FormatTokenEnum.parseFormatStrWithToken(ToDateTokenizer.java:707)
	at org.h2.util.ToDateParser.parse(ToDateParser.java:127)
	at org.h2.util.ToDateParser.getDateParser(ToDateParser.java:64)
	at org.h2.util.ToDateParser.toDate(ToDateParser.java:196)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1450)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Operation.getValue(Operation.java:110)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:48:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Feature not supported: "VARCHAR -"; SQL statement:
SELECT WYCC_ID,TO_DATE(END_MOVEMENT,'dd/mm/yyyy')-TO_DATE(START_MOVEMENT,'dd/mm/yyyy') FROM MVT [50100-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:216)
	at org.h2.value.Value.throwUnsupportedExceptionForType(Value.java:1158)
	at org.h2.value.Value.subtract(Value.java:492)
	at org.h2.expression.Operation.getValue(Operation.java:150)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:48:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Feature not supported: "VARCHAR -"; SQL statement:
SELECT WYCC_ID,TO_DATE(END_MOVEMENT,'dd/mm/yyyy')-TO_DATE(START_MOVEMENT,'dd/mm/yyyy') FROM MVT [50100-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:216)
	at org.h2.value.Value.throwUnsupportedExceptionForType(Value.java:1158)
	at org.h2.value.Value.subtract(Value.java:492)
	at org.h2.expression.Operation.getValue(Operation.java:150)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 01:52:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "DATE" constant "19/07/2015"; SQL statement:
INSERT INTO MVT_NUM  SELECT * FROM CSVREAD('/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/./documentstest/Affritec3') -- row #2 ('ENIGMA', '12278', '19/01/2012', '18/01/2018', '', '19/07/2015', '18/01/2016', '101', '3746734', 'Male', 'BRISSON', STRINGDECODE('St\ufffdphane'), '29/01/1974', 'stephane_bsn@hotmail.com', 'OFFICIER', 'Captain/Master', '12000', 'EUR', 'Annual', '18', '1', 'NO', 'NO', '19/07/2015', '18/01/2016', 'n/a', '0', 'France', 'French', 'AIG Luxembourg', 'PRESTIGES', 'L2015228', 'EUR', 'n/a', 'n/a', '500000', '791,8269', 'AIG Luxembourg', 'PRESTIGES', 'L2015228', 'EUR', 'n/a', 'n/a', '25000', '129,8077', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', '432000', '0,05%', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', '432000', '0,13%', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', '432000', '0,06%', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', '432000', '0,15%', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', '7', '365', '144000', '0,45%', 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', '7', '365', '144000', '0,90%') [22007-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueDate.parse(ValueDate.java:81)
	at org.h2.value.Value.convertTo(Value.java:928)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.addRow(Insert.java:189)
	at org.h2.command.dml.Insert.insertRows(Insert.java:172)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:255)
Caused by: java.lang.IllegalArgumentException: 19/07/2015
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:313)
	at org.h2.value.ValueDate.parse(ValueDate.java:79)
	... 10 more
2017-01-15 01:59:13 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.openConnection(JDBCDataSource.java:159)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:73)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.<init>(JDBCDataSource.java:99)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:84)
	at org.jkiss.dbeaver.ext.generic.model.meta.GenericMetaModel.createDataSource(GenericMetaModel.java:86)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:153)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:702)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:74)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.runSync(ConnectJob.java:102)
	at org.jkiss.dbeaver.ui.actions.datasource.DataSourceHandler.connectToDataSource(DataSourceHandler.java:111)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.initConnection(DataSourceDescriptor.java:628)
	at org.jkiss.dbeaver.model.navigator.DBNDataSource.initializeNode(DBNDataSource.java:122)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:188)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:1)
	at org.jkiss.dbeaver.ui.navigator.NavigatorUtils.getNodeChildrenFiltered(NavigatorUtils.java:538)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:50)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:1)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:86)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:71)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 42 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 37 more
2017-01-15 02:00:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,DATEDIFF(PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')-PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'))[*] FROM MVT"; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,"; SQL statement:
SELECT WYCC_ID,DATEDIFF(PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')-PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy')) FROM MVT [42001-193]
2017-01-15 02:00:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,DATEDIFF(PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'))[*] FROM MVT"; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,"; SQL statement:
SELECT WYCC_ID,DATEDIFF(PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy')) FROM MVT [42001-193]
2017-01-15 02:26:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO'||'TATA'
DATEDIFF([*]'DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE WYCC_ID='101' "; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO'||'TATA'
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE wycc_id='101' [42000-193]
2017-01-15 02:30:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO'
DATEDIFF([*]'DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE WYCC_ID='101' "; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO'
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE wycc_id='101' [42000-193]
2017-01-15 02:30:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO' TEST
DATEDIFF[*]('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE WYCC_ID='101' "; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
'TOTO' TEST
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE wycc_id='101' [42000-193]
2017-01-15 02:32:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "PARSEDATETIME", expected count: "2..4"; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
PARSEDATETIME(SUBSTRING(START_MOVEMENT,7,4)||'-'||SUBSTRING(START_MOVEMENT,4,2)||'-'||SUBSTRING(START_MOVEMENT,1,2)),
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.checkParameterCount(Function.java:2257)
	at org.h2.expression.Function.doneWithParameters(Function.java:2272)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 02:35:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Error parsing "2015-7/-19"; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,END_MOVEMENT,
PARSEDATETIME(SUBSTRING(START_MOVEMENT,7,4)||'-'||SUBSTRING(START_MOVEMENT,5,2)||'-'||SUBSTRING(START_MOVEMENT,1,2),'yyyy-mm-dd'),
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/mm/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/mm/yyyy'))
FROM MVT WHERE wycc_id=101 [90014-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:620)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1508)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.text.ParseException: Unparseable date: "2015-7/-19"
	at java.text.DateFormat.parse(DateFormat.java:366)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:616)
	... 19 more
2017-01-15 02:39:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,START_MOVEMENT,
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
DATEDIFF([*]'DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30-DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT"; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')),
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30-DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT [42000-193]
2017-01-15 02:40:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "(DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30)-
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT"; expected "(, WITH, SELECT, FROM"; SQL statement:
(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30)-
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT [42001-193]
2017-01-15 02:40:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "(DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))*30 -
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT"; expected "(, WITH, SELECT, FROM"; SQL statement:
(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))*30 -
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))
FROM MVT [42001-193]
2017-01-15 02:41:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "(DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))*30 -
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT"; expected "(, WITH, SELECT, FROM"; SQL statement:
(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))*30 -
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT [42001-193]
2017-01-15 02:42:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "30[*]*(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))-
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT"; SQL statement:
30*(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))-
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT [42000-193]
2017-01-15 02:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "(DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))/30,
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT"; expected "(, WITH, SELECT, FROM"; SQL statement:
(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))/30,
( DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))
FROM MVT [42001-193]
2017-01-15 02:43:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "(DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))/30"; expected "(, WITH, SELECT, FROM"; SQL statement:
(DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')))/30 [42001-193]
2017-01-15 02:43:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID,START_MOVEMENT,
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')),
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')),[*]"; expected "*, NOT, EXISTS, INTERSECTS"; SQL statement:
SELECT WYCC_ID,START_MOVEMENT,
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')),
DATEDIFF('DAY',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')), [42001-193]
2017-01-15 02:44:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DATEDIFF[*]('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30"; expected "DELETE, DROP, DECLARE, DEALLOCATE, {"; SQL statement:
DATEDIFF('MM',PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy'),PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy'))*30 [42001-193]
2017-01-15 11:09:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Function "TO_NUMBER" not found; SQL statement:
SELECT TO_NUMBER(CIE_HT_BASE1) FROM MVT WHERE WYCC_ID=130362 [90022-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.readJavaFunction(Parser.java:2421)
	at org.h2.command.Parser.readFunction(Parser.java:2473)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 11:09:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Function "TO_NUM" not found; SQL statement:
SELECT TO_NUM(CIE_HT_BASE1) FROM MVT WHERE WYCC_ID=130362 [90022-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.readJavaFunction(Parser.java:2421)
	at org.h2.command.Parser.readFunction(Parser.java:2473)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 11:16:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TEST" not found; SQL statement:
drop table test; 
create table test(id int); 
insert into test values(1) [42102-193]
2017-01-15 11:16:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TEST" not found; SQL statement:
drop table test [42102-193]
2017-01-15 11:17:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "0x11"; SQL statement:
select cast('0x11' as int) d from test [22018-193]
2017-01-15 11:17:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "1.1"; SQL statement:
select cast('1.1' as int) a from test [22018-193]
2017-01-15 11:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "1,1"; SQL statement:
select cast('1,1' as int) a from test [22018-193]
2017-01-15 11:17:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "1,1"; SQL statement:
select cast('1,1' as number) a from test [22018-193]
2017-01-15 11:26:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY','[*],'.')  AS NUMBER),
	CAST(REPLACE(SALARY_CURRENCY',','.')  AS NUMBER),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1',','.')  AS NUMBER) ',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS1',','.')  AS NUMBER)',','.')  AS NUMBER),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS2',','.')  AS NUMBER),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS3',','.')  AS NUMBER),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS4',','.')  AS NUMBER),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS5',','.')  AS NUMBER),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS6',','.')  AS NUMBER),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS7',','.')  AS NUMBER),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS8',','.')  AS NUMBER)
FROM
	PUBLIC.MVT "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY',','.')  as Number),
	CAST(REPLACE(SALARY_CURRENCY',','.')  as Number),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1',','.')  as Number) ',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS1',','.')  as Number)',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS2',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS3',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS4',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS5',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS6',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS7',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS8',','.')  as Number)
FROM
	PUBLIC.MVT [42001-193]
2017-01-15 11:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  AS NUMBER),
	CAST(REPLACE(SALARY_CURRENCY,',','.')  AS NUMBER),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  AS NUMBER) ,',','.')[*]  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS1,',','.')  AS NUMBER),',','.')  AS NUMBER),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS2,',','.')  AS NUMBER),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS3,',','.')  AS NUMBER),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS4,',','.')  AS NUMBER),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS5,',','.')  AS NUMBER),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS6,',','.')  AS NUMBER),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS7,',','.')  AS NUMBER),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  AS NUMBER),
	CAST(REPLACE(CIE_HT_BASIS8,',','.')  AS NUMBER)
FROM
	PUBLIC.MVT "; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	CAST(REPLACE(SALARY_CURRENCY,',','.')  as Number),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS1,',','.')  as Number),',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS2,',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS3,',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS4,',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS5,',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS6,',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS7,',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS8,',','.')  as Number)
FROM
	PUBLIC.MVT [42000-193]
2017-01-15 11:28:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "EUR"; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	CAST(REPLACE(SALARY_CURRENCY,',','.')  as Number),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(CIE_HT_BASIS1,',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS2,',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS3,',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS4,',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS5,',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS6,',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS7,',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS8,',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 11:29:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "0.05%"; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(CIE_HT_BASIS1,',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS2,',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS3,',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS4,',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS5,',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS6,',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS7,',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(CIE_HT_BASIS8,',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 11:31:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "EUR"; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	CAST(REPLACE(SALARY_CURRENCY,',','.')  as Number),
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 11:31:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:23:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,
	CERTIFICATE,
	CERTIFICATE_START,
	CERTIFICATE_RENEWAL,
	CERTIFICATE_CANCELLATION,
	AMENDMENT_START,
	AMENDMENT_END,
	WYCC_ID,
	CLAIMS_MANAGER_ID,
	GENDER,
	NAME,
	FIRST_NAME,
	DATE_OF_BIRTH,
	EMAIL,
	POSITION_TYPE,
	POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,
	PERIOD,
	DAYS,
	MONTHS,
	FAMILY_COVERED,
	RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,
	CHILDREN,
	COUNTRY,
	NATIONALITY,
	COMPANY1,
	FORMULA1,
	POLICY_NUMBER1,
	CURRENCY1,
	EXCESS1,
	DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,
	FORMULA2,
	POLICY_NUMBER2,
	CURRENCY2,
	EXCESS2,
	DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,
	FORMULA3,
	POLICY_NUMBER3,
	CURRENCY3,
	EXCESS3,
	DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,
	FORMULA4,
	POLICY_NUMBER4,
	CURRENCY4,
	EXCESS4,
	DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:25:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy')END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5,
	FORMULA5,
	POLICY_NUMBER5,
	CURRENCY5,
	EXCESS5,
	DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:28:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "EMPLOYER[*],CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  AS NUMBER) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  AS NUMBER),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  AS NUMBER),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  AS NUMBER),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  AS NUMBER),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  AS NUMBER),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  AS NUMBER),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  AS NUMBER),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  AS NUMBER),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  AS NUMBER)
FROM
	PUBLIC.MVT "; expected "EXPLAIN, EXECUTE, {"; SQL statement:
EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [42001-193]
2017-01-15 20:28:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:31:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT WHERE COMPANY4 IS NOT null [22018-193]
2017-01-15 20:34:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "STRUCTURE_NAME" not found; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
		EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) ,
	CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2 [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 20:34:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "STRUCTURE_NAME" not found; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST(REPLACE(MONTHLY_SALARY,',','.')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
		EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 20:35:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TOTAL_AMOUNT_INSURED1" not found; SQL statement:
SELECT TOTAL_AMOUNT_INSURED1,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 20:35:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT TOTAL_AMOUNT_INSURED1,
	                                                          

FROM
	PUBLIC.MVT [*]"; expected "(, AS, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:
SELECT TOTAL_AMOUNT_INSURED1,
	--CAST(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  as Number) 

FROM
	PUBLIC.MVT [42001-193]
2017-01-15 20:35:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TOTAL_AMOUNT_INSURED1" not found; SQL statement:
SELECT TOTAL_AMOUNT_INSURED1 [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 20:37:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:38:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT CAST(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')  as Number),
	CAST(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:41:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "791.8269"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( IFNULL (REPLACE(MONTHLY_SALARY,',','.') ,0)  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,0)  as Number) ,
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ,0)  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ,0)  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ,0)  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ,0)  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ,0)  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ,0)  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED7,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ,0)  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ,0)  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:41:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "791.8269"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( IFNULL (REPLACE(MONTHLY_SALARY,',','.') ,0)  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,0)  as Number) ,
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ,0)  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ,0)  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ,0)  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ,0)  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ,0)  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 20:42:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( IFNULL (REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')  as Number) ,
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ,'0')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ,'0')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ,'0')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ,'0')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ,'0')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ,'0')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED7,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ,'0')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ,'0')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 21:09:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting ; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( IFNULL (REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')  as Number) ,
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ,'0')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ,'0')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ,'0')  as Number),
	CAST( IFNULL (REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ,'0')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST( IFNULL (REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ,'0')  as Number)
FROM
	PUBLIC.MVT [22018-193]
2017-01-15 21:12:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT CASEWHEN(TOTAL_AMOUNT_INSURED4='', 'A', 'B')([*]TOTAL_AMOUNT_INSURED4)
FROM
	PUBLIC.MVT"; SQL statement:
SELECT CASEWHEN(TOTAL_AMOUNT_INSURED4='', 'A', 'B')(TOTAL_AMOUNT_INSURED4)
FROM
	PUBLIC.MVT [42000-193]
2017-01-15 21:22:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "CASEWHEN", expected count: "3"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( CASEWHEN(REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')  as Number) ,
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ,'0')  as Number),
	COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED2,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ,'0')  as Number),
	COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED3,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ,'0')  as Number),
	COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED4,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ,'0')  as Number),
	COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED5,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ,'0')  as Number),
	COMPANY6,
	FORMULA,
	POLICY_NUMBER6,
	CURRENCY6,
	EXCESS6,
	DURATION6,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED6,',','.')<>,'',REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ,'0')  as Number),
	COMPANY7,
	FORMULA7,
	POLICY_NUMBER7,
	CURRENCY7,
	EXCESS67,
	DURATION7,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED7,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ,'0')  as Number),
	COMPANY8,
	FORMULA8,
	POLICY_NUMBER8,
	CURRENCY8,
	EXCESS8,
	DURATION8,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED8,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ,'0')  as Number),
	CAST( CASEWHEN(REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.')<>'',REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ,'0')  as Number)
FROM
	PUBLIC.MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.doneWithParameters(Function.java:2279)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readFunction(Parser.java:2477)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:23:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "CASEWHEN", expected count: "3"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( CASEWHEN(REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED1,',','.')<>'',REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')  as Number) 
FROM
	PUBLIC.MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.doneWithParameters(Function.java:2279)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readFunction(Parser.java:2477)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:23:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "CASEWHEN", expected count: "3"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( CASEWHEN(REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	CAST( CASEWHEN(REPLACE(TOTAL_AMOUNT_INSURED1,',','.') !='',REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')  as Number) 
FROM
	PUBLIC.MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.doneWithParameters(Function.java:2279)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readFunction(Parser.java:2477)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:24:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "CASEWHEN", expected count: "3"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( CASEWHEN(REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	 CASEWHEN( REPLACE(TOTAL_AMOUNT_INSURED1,',','.') !='', REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ,'0')
FROM
	PUBLIC.MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.doneWithParameters(Function.java:2279)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readFunction(Parser.java:2477)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:26:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "CASEWHEN", expected count: "3"; SQL statement:
SELECT
	STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END,
	WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW,
	CAST( CASEWHEN(REPLACE(MONTHLY_SALARY,',','.') ,'0')  as Number),
	SALARY_CURRENCY,PERIOD,DAYS,MONTHS,FAMILY_COVERED,RETIREMENT_PLAN,
	PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT,
	PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT,
	EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1,
	 CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.') ELSE '0' end
FROM
	PUBLIC.MVT [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.doneWithParameters(Function.java:2279)
	at org.h2.command.Parser.readFunction(Parser.java:2628)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readFunction(Parser.java:2477)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "START_MMOVEMENT" not found; SQL statement:
SELECT wycc_id, start_mmovement,end_movement,monthly_salary
FROM mvt_num [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 21:50:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID, START_MOVEMENT,END_MOVEMENT,MONTHLY_SALARY,
TOTAL_AMOUNT_INSURED1,CIE_HT_BASIS1,
TOTAL_AMOUNT_INSURED2,CIE_HT_BASIS2,
TOTAL_AMOUNT_INSURED3,CIE_HT_BASIS3,
TOTAL_AMOUNT_INSURED4,CIE_HT_BASIS4,
TOTAL_AMOUNT_INSURED5,CIE_HT_BASIS5,
TOTAL_AMOUNT_INSURED6,CIE_HT_BASIS6,
FROM MVT_NUM [*]"; expected "., (, AS, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:
SELECT wycc_id, start_movement,end_movement,monthly_salary,
total_amount_insured1,cie_ht_basis1,
total_amount_insured2,cie_ht_basis2,
total_amount_insured3,cie_ht_basis3,
total_amount_insured4,cie_ht_basis4,
total_amount_insured5,cie_ht_basis5,
total_amount_insured6,cie_ht_basis6,
FROM mvt_num [42001-193]
2017-01-15 22:00:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) JOUR
START_MOVEMENT[*],END_MOVEMENT,MONTHLY_SALARY,
TOTAL_AMOUNT_INSURED1,CIE_HT_BASIS1,
TOTAL_AMOUNT_INSURED2,CIE_HT_BASIS2,
TOTAL_AMOUNT_INSURED3,CIE_HT_BASIS3,
TOTAL_AMOUNT_INSURED4,CIE_HT_BASIS4,
TOTAL_AMOUNT_INSURED5,CIE_HT_BASIS5,
TOTAL_AMOUNT_INSURED6,CIE_HT_BASIS6,
TOTAL_AMOUNT_INSURED7,CIE_HT_BASIS7,
TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8
FROM MVT_NUM
ORDER BY WYCC_ID,START_MOVEMENT "; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour
start_movement,end_movement,monthly_salary,
total_amount_insured1,cie_ht_basis1,
total_amount_insured2,cie_ht_basis2,
total_amount_insured3,cie_ht_basis3,
total_amount_insured4,cie_ht_basis4,
total_amount_insured5,cie_ht_basis5,
total_amount_insured6,cie_ht_basis6,
total_amount_insured7,cie_ht_basis7,
total_amount_insured8,cie_ht_basis8
FROM mvt_num
ORDER BY wycc_id,start_movement [42000-193]
2017-01-15 22:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "START_MOVEMENT" must be in the GROUP BY list; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour
FROM mvt_num
GROUP BY wycc_id
ORDER BY wycc_id,start_movement [90016-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:169)
	at org.h2.expression.Function.updateAggregate(Function.java:2658)
	at org.h2.expression.Alias.updateAggregate(Alias.java:87)
	at org.h2.command.dml.Select.queryGroup(Select.java:365)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:650)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 22:01:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "START_MOVEMENT" must be in the GROUP BY list; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour
FROM mvt_num
GROUP BY wycc_id
ORDER BY wycc_id [90016-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:169)
	at org.h2.expression.Function.updateAggregate(Function.java:2658)
	at org.h2.expression.Alias.updateAggregate(Alias.java:87)
	at org.h2.command.dml.Select.queryGroup(Select.java:365)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:650)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 22:06:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Error parsing "2016-02-25"; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') END  START_MOVEMENT,
start_movement,end_movement,monthly_salary,
total_amount_insured1,cie_ht_basis1,
total_amount_insured2,cie_ht_basis2,
total_amount_insured3,cie_ht_basis3,
total_amount_insured4,cie_ht_basis4,
total_amount_insured5,cie_ht_basis5,
total_amount_insured6,cie_ht_basis6,
total_amount_insured7,cie_ht_basis7,
total_amount_insured8,cie_ht_basis8
FROM mvt_num
ORDER BY end_movement DESC [90014-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:620)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1508)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Function.getSimpleValue(Function.java:1081)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1193)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Alias.getValue(Alias.java:36)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.text.ParseException: Unparseable date: "2016-02-25"
	at java.text.DateFormat.parse(DateFormat.java:366)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:616)
	... 23 more
2017-01-15 22:07:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Error parsing "2016-02-25"; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') END  START_MOVEMENT,
start_movement,end_movement,monthly_salary,
total_amount_insured1,cie_ht_basis1,
total_amount_insured2,cie_ht_basis2,
total_amount_insured3,cie_ht_basis3,
total_amount_insured4,cie_ht_basis4,
total_amount_insured5,cie_ht_basis5,
total_amount_insured6,cie_ht_basis6,
total_amount_insured7,cie_ht_basis7,
total_amount_insured8,cie_ht_basis8
FROM mvt_num
ORDER BY end_movement DESC [90014-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:620)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1508)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Function.getSimpleValue(Function.java:1081)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1193)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Alias.getValue(Alias.java:36)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.text.ParseException: Unparseable date: "2016-02-25"
	at java.text.DateFormat.parse(DateFormat.java:366)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:616)
	... 23 more
2017-01-15 22:07:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Error parsing "2016-01-01"; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('2016-01-01','dd/MM/yyyy') THEN PARSEDATETIME('2016-01-01','dd/MM/yyyy') ELSE PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') END  START_MOVEMENT,
start_movement,end_movement,monthly_salary,
total_amount_insured1,cie_ht_basis1,
total_amount_insured2,cie_ht_basis2,
total_amount_insured3,cie_ht_basis3,
total_amount_insured4,cie_ht_basis4,
total_amount_insured5,cie_ht_basis5,
total_amount_insured6,cie_ht_basis6,
total_amount_insured7,cie_ht_basis7,
total_amount_insured8,cie_ht_basis8
FROM mvt_num
ORDER BY end_movement DESC [90014-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:620)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1508)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Function.optimize(Function.java:2496)
	at org.h2.expression.Comparison.optimize(Comparison.java:180)
	at org.h2.expression.Function.optimize(Function.java:2301)
	at org.h2.expression.Alias.optimize(Alias.java:51)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.text.ParseException: Unparseable date: "2016-01-01"
	at java.text.DateFormat.parse(DateFormat.java:366)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:616)
	... 21 more
2017-01-15 22:08:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Error parsing "2016-02-25"; SQL statement:
SELECT wycc_id, 
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') END  START_MOVEMENT
FROM mvt_num
ORDER BY end_movement DESC [90014-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:620)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1508)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Function.getSimpleValue(Function.java:1081)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1193)
	at org.h2.expression.Function.getValue(Function.java:588)
	at org.h2.expression.Alias.getValue(Alias.java:36)
	at org.h2.command.dml.Select.queryFlat(Select.java:549)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:655)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.text.ParseException: Unparseable date: "2016-02-25"
	at java.text.DateFormat.parse(DateFormat.java:366)
	at org.h2.util.DateTimeUtils.parseDateTime(DateTimeUtils.java:616)
	... 23 more
2017-01-15 22:10:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT WYCC_ID, START_MOVEMENT,
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) JOUR,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE START_MOVEMENT END  START_MOVEMENT
CASE[*] WHEN END_MOVEMENT <=PARSEDATETIME('31/12/2016','dd/MM/yyyy') THEN PARSEDATETIME('31/12/2016','dd/MM/yyyy') ELSE END_MOVEMENT END  END_MOVEMENT "; SQL statement:
SELECT wycc_id, START_MOVEMENT,
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE START_MOVEMENT END  START_MOVEMENT
CASE WHEN END_MOVEMENT <=PARSEDATETIME('31/12/2016','dd/MM/yyyy') THEN PARSEDATETIME('31/12/2016','dd/MM/yyyy') ELSE END_MOVEMENT END  END_MOVEMENT [42000-193]
2017-01-15 22:10:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "WYCC_ID" not found; SQL statement:
SELECT wycc_id, START_MOVEMENT,
DATEDIFF('DAY',START_MOVEMENT,END_MOVEMENT) Jour,
CASE WHEN START_MOVEMENT <=PARSEDATETIME('01/01/2016','dd/MM/yyyy') THEN PARSEDATETIME('01/01/2016','dd/MM/yyyy') ELSE START_MOVEMENT END  START_MOVEMENT,
CASE WHEN END_MOVEMENT <=PARSEDATETIME('31/12/2016','dd/MM/yyyy') THEN PARSEDATETIME('31/12/2016','dd/MM/yyyy') ELSE END_MOVEMENT END  END_MOVEMENT [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 22:12:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	START_MOVEMENT,
	DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) JOUR,
FROM
	MVT_NUM
ORDER[*] BY
	END_MOVEMENT DESC "; expected "., (, AS, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:
SELECT
	wycc_id,
	START_MOVEMENT,
	DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) Jour,
FROM
	mvt_num
ORDER BY
	end_movement DESC [42001-193]
2017-01-15 22:14:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	START_MOVEMENT,
	( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) JOUR[*]
FROM
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
SELECT
	wycc_id,
	START_MOVEMENT,
	( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) Jour
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:14:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	START_MOVEMENT,
	SUM( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) JOUR[*]
FROM
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	START_MOVEMENT,
	SUM( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) Jour
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:14:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) JOUR[*]
FROM
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END  ) Jour
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:15:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  ) JOUR[*]
FROM
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  ) Jour
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  ) JOUR[*]
FROM
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  ) Jour
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:15:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  )
FROM[*]
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END)  )
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:16:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END))
FROM[*]
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( (  DATEDIFF( 'DAY', 
	CASE
		WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' )
		ELSE START_MOVEMENT
	END ,
	CASE
		WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' )
		ELSE END_MOVEMENT
	END))
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:17:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	SUM( (  DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END))
FROM[*]
	MVT_NUM
GROUP BY
	WYCC_ID "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT
	wycc_id,
	SUM( (  DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END))
FROM
	mvt_num
group BY
	wycc_id [42001-193]
2017-01-15 22:18:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	(  DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END)
FROM[*]
	MVT_NUM "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
SELECT
	wycc_id,
	(  DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END)
FROM
	mvt_num [42001-193]
2017-01-15 22:18:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "WYCC_ID" must be in the GROUP BY list; SQL statement:
SELECT
	wycc_id,
	 SUM( DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END))
FROM
	mvt_num [90016-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:169)
	at org.h2.command.dml.Select.queryGroup(Select.java:365)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:650)
	at org.h2.command.dml.Query.query(Query.java:341)
	at org.h2.command.dml.Query.query(Query.java:309)
	at org.h2.command.dml.Query.query(Query.java:36)
	at org.h2.command.CommandContainer.query(CommandContainer.java:110)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:179)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 22:21:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,START_MOVEMENT, END_MOVEMENT
	 DATEDIFF([*] 'DAY', START_MOVEMENT, END_MOVEMENT )) JOUR
FROM
	MVT_NUM "; SQL statement:
SELECT
	wycc_id,START_MOVEMENT, END_MOVEMENT
	 DATEDIFF( 'DAY', START_MOVEMENT, END_MOVEMENT )) Jour
FROM
	mvt_num [42000-193]
2017-01-15 22:25:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "GROUP_ID" not found; SQL statement:
SELECT
	wycc_id,min( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END) ,
	max( case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END),
	 SUM( DATEDIFF( 'DAY',  CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END , case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END)+1)
FROM
	mvt_num 
	GROUP BY wycc_id
ORDER BY group_id asc [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-15 22:26:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END) ,
	( CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END), [*]"; expected "*, NOT, EXISTS, INTERSECTS"; SQL statement:
SELECT
	wycc_id,( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END) ,
	( case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END), [42001-193]
2017-01-15 22:26:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ,
	CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END, [*]"; expected "*, NOT, EXISTS, INTERSECTS"; SQL statement:
SELECT
	wycc_id,
	CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ,
	case WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END, [42001-193]
2017-01-15 22:27:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "FROM
	MVT_NUM 
 ORDER[*] BY WYCC_ID ASC "; expected "., (, AS, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:
FROM
	mvt_num 
 ORDER BY wycc_id ASC [42001-193]
2017-01-15 22:27:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "FROM
	MVT_NUM 
 ORDER[*] BY WYCC_ID ASC "; expected "., (, AS, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:
FROM
	mvt_num 
 ORDER BY wycc_id ASC [42001-193]
2017-01-15 22:45:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	MIN( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ) DATEMIN,
	MAX( CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END ) DATEMAX,
	SUM( DATEDIFF( 'DAY', CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END, CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END )+ 1 ) NBJOUR
	COUNT[*](WYCC_ID) NBREMVT
	FROM
	MVT_NUM
GROUP BY
	WYCC_ID
ORDER BY
	WYCC_ID ASC "; SQL statement:
SELECT
	wycc_id,
	MIN( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ) DateMin,
	MAX( CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END ) DateMax,
	SUM( DATEDIFF( 'DAY', CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END, CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END )+ 1 ) NbJour
	count(wycc_id) NbreMvt
	FROM
	mvt_num
GROUP BY
	wycc_id
ORDER BY
	wycc_id ASC [42000-193]
2017-01-15 22:45:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT
	WYCC_ID,
	MIN( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ) DATEMIN,
	MAX( CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END ) DATEMAX,
	SUM( DATEDIFF( 'DAY', CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END, CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END )+ 1 ) NBJOUR
	COUNT[*](*) NBREMVT
	FROM
	MVT_NUM
GROUP BY
	WYCC_ID
ORDER BY
	WYCC_ID ASC "; SQL statement:
SELECT
	wycc_id,
	MIN( CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END ) DateMin,
	MAX( CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END ) DateMax,
	SUM( DATEDIFF( 'DAY', CASE WHEN START_MOVEMENT <= PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '01/01/2016', 'dd/MM/yyyy' ) ELSE START_MOVEMENT END, CASE WHEN END_MOVEMENT >= PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) THEN PARSEDATETIME( '31/12/2016', 'dd/MM/yyyy' ) ELSE END_MOVEMENT END )+ 1 ) NbJour
	count(*) NbreMvt
	FROM
	mvt_num
GROUP BY
	wycc_id
ORDER BY
	wycc_id ASC [42000-193]
2017-01-16 20:16:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTING" not found; SQL statement:
select  yt1.wycc_id,to_date(yt1.start_movement),to_date(yt1.end_movement),
 (
        select count(*)
        from accounting yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as COUNT#, [42102-193]
2017-01-16 20:17:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "( SELECT MIN((TO_DATE(YT2.START_MOVEMENT)))
        FROM MVT YT2
        WHERE YT2.WYCC_ID = YT1.WYCC_ID AND TO_DATE(YT2.START_MOVEMENT ) > (TO_DATE(YT1.END_MOVEMENT))
    ) AS[*] MOIS2 "; SQL statement:
( select MIN((to_date(yt2.start_movement)))
        from mvt yt2
        where yt2.wycc_id = yt1.wycc_id and to_date(yt2.start_movement ) > (to_date(yt1.end_movement))
    ) as MOIS2 [42000-193]
2017-01-16 20:19:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT  YT1.WYCC_ID,TO_DATE(YT1.START_MOVEMENT),TO_DATE(YT1.END_MOVEMENT),
 (
        SELECT COUNT(*)
        FROM MVT_NUM YT2
        WHERE YT2.WYCC_ID = YT1.WYCC_ID
    ) AS COUNT[*]#, "; SQL statement:
select  yt1.wycc_id,to_date(yt1.start_movement),to_date(yt1.end_movement),
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as COUNT#, [42000-193]
2017-01-16 20:19:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
select  yt1.wycc_id,to_date(yt1.start_movement),to_date(yt1.end_movement),
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 20:20:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
select  yt1.wycc_id,yt1.start_movement,yt1.end_movement,
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 20:23:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTING" not found; SQL statement:
select  yt1.wycc_id,yt1.start_movement,yt1.end_movement,
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre,
   (
        select COUNt(*)
        from accounting yt2
        where yt2.wycc_id = yt1.wycc_id and tyt2.start_movement < yt1.end_movement+1)
from Mvt_num yt1 order by wycc_id asc ,yt1.START_MOVEMENT ASC [42102-193]
2017-01-16 20:26:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTING" not found; SQL statement:
select  yt1.wycc_id,yt1.start_movement,yt1.end_movement,
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre,
   (
        select COUNt(*)
        from accounting yt2
        where yt2.wycc_id = yt1.wycc_id and tyt2.start_movement < DAY('DAY',1,yt1.end_movement ))
from Mvt_num yt1 order by wycc_id asc ,yt1.START_MOVEMENT ASC [42102-193]
2017-01-16 20:26:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Invalid parameter count for "DAY", expected count: "1"; SQL statement:
select  yt1.wycc_id,yt1.start_movement,yt1.end_movement,
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre,
   (
        select COUNt(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and tyt2.start_movement < DAY('DAY',1,yt1.end_movement ))
from Mvt_num yt1 order by wycc_id asc ,yt1.START_MOVEMENT ASC [7001-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.expression.Function.setParameter(Function.java:575)
	at org.h2.command.Parser.readFunction(Parser.java:2623)
	at org.h2.command.Parser.readTerm(Parser.java:2807)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2235)
	at org.h2.command.Parser.readAnd(Parser.java:2102)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2049)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.readTerm(Parser.java:2780)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.readTerm(Parser.java:2899)
	at org.h2.command.Parser.readFactor(Parser.java:2324)
	at org.h2.command.Parser.readSum(Parser.java:2311)
	at org.h2.command.Parser.readConcat(Parser.java:2281)
	at org.h2.command.Parser.readCondition(Parser.java:2128)
	at org.h2.command.Parser.readAnd(Parser.java:2100)
	at org.h2.command.Parser.readExpression(Parser.java:2092)
	at org.h2.command.Parser.parseSelectSimpleSelectPart(Parser.java:2004)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:2036)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1891)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1709)
	at org.h2.command.Parser.parseSelect(Parser.java:1697)
	at org.h2.command.Parser.parsePrepared(Parser.java:445)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 20:27:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TYT2.START_MOVEMENT" not found; SQL statement:
select  yt1.wycc_id,yt1.start_movement,yt1.end_movement,
 (
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id
    ) as Nbre,
   (
        select COUNt(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and tyt2.start_movement < DATEADD('DAY',1,yt1.end_movement ))
from Mvt_num yt1 order by wycc_id asc ,yt1.START_MOVEMENT ASC [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:131)
	at org.h2.command.dml.Select.prepare(Select.java:856)
	at org.h2.engine.Session.optimizeQueryExpression(Session.java:233)
	at org.h2.expression.Subquery.optimize(Subquery.java:69)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 20:41:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "( SELECT MIN(YT2.START_MOVEMENT))
        FROM[*] MVT_NUM YT2
        WHERE YT2.WYCC_ID = YT1.WYCC_ID AND YT2.START_MOVEMENT > DATEADD( 'DAY', 1, YT1.END_MOVEMENT )
    ) AS MOIS2 "; SQL statement:
( select MIN(yt2.start_movement))
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and yt2.start_movement > DATEADD( 'DAY', 1, yt1.end_movement )
    ) as MOIS2 [42000-193]
2017-01-16 20:42:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
SELECT
	yt1.wycc_id,
	yt1.start_movement,
	yt1.end_movement,
	(
		SELECT
			COUNT(*)
		FROM
			mvt_num yt2
		WHERE
			yt2.wycc_id = yt1.wycc_id
	) AS Nbre,
	(
		SELECT
			COUNT(*)
		FROM
			mvt_num yt2
		WHERE
			yt2.wycc_id = yt1.wycc_id
			AND yt2.start_movement < DATEADD( 'DAY', 1, yt1.end_movement )
	) RANK,
(
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and yt2.start_movement = DATEADD( 'DAY', 1, yt1.end_movement )
    ) as NextMvt,
  ( select MIN(yt2.start_movement)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and yt2.start_movement > DATEADD( 'DAY', 1, yt1.end_movement )
    ) as MOIS2 [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 20:43:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
SELECT
	yt1.wycc_id,
	yt1.start_movement,
	yt1.end_movement,
	(
		SELECT
			COUNT(*)
		FROM
			mvt_num yt2
		WHERE
			yt2.wycc_id = yt1.wycc_id
	) AS Nbre,
	(
		SELECT
			COUNT(*)
		FROM
			mvt_num yt2
		WHERE
			yt2.wycc_id = yt1.wycc_id
			AND yt2.start_movement < DATEADD( 'DAY', 1, yt1.end_movement )
	) RANK,
(
        select count(*)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and yt2.start_movement = DATEADD( 'DAY', 1, yt1.end_movement )
    ) as NextMvt,
  ( select MIN(yt2.start_movement)
        from mvt_num yt2
        where yt2.wycc_id = yt1.wycc_id and yt2.start_movement > DATEADD( 'DAY', 1, yt1.end_movement )
    ) as MOIS2 [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 22:00:18 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:245)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-16 22:24:37 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:245)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-16 22:25:30 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:245)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-16 22:26:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' THEN REPLACE(MONTHLY_SALARY,',','.') ELSE  '0' END  AS NUMBER), SALARY_CURRENCY,PERIOD ,CAST(DAYS AS NUMBER),CAST(MONTHS AS NUMBER),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  ELSE  '0' END  AS NUMBER) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  THEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ELSE  '0' END  AS NUMBER), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  THEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' THEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ELSE  '0' END  AS NUMBER) ([*] SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID )  ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ) ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ) , ( SELECT MIN( YT2.START_MOVEMENT ) FROM MVT_NUM YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') > PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) FROM PUBLIC.MVT "; SQL statement:
INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' then REPLACE(MONTHLY_SALARY,',','.') else  '0' end  as Number), SALARY_CURRENCY,PERIOD ,cast(DAYS as number),cast(MONTHS as number),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  else  '0' end  as Number) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  then REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') else  '0' end  as Number), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  then REPLACE(TOTAL_AMOUNT_INSURED2,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') else  '0' end  as Number), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED3,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') else  '0' end  as Number), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED4,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') else  '0' end  as Number), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED5,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') else  '0' end  as Number), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED6,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') else  '0' end  as Number), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' then REPLACE(TOTAL_AMOUNT_INSURED7,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') else  '0' end  as Number), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED8,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') else  '0' end  as Number) ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id )  ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ) ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ) , ( SELECT MIN( yt2.start_movement ) FROM mvt_num yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') > PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) FROM PUBLIC.MVT [42000-193]
2017-01-16 22:27:07 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.openConnection(JDBCDataSource.java:159)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:73)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.<init>(JDBCDataSource.java:99)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:84)
	at org.jkiss.dbeaver.ext.generic.model.meta.GenericMetaModel.createDataSource(GenericMetaModel.java:86)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:153)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:702)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:74)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 31 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 26 more
2017-01-16 22:28:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT
	INTO
		PUBLIC.MVT_NUM(
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			MONTHLY_SALARY,
			SALARY_CURRENCY,
			PERIOD,
			DAYS,
			MONTHS,
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			START_MOVEMENT,
			END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			TOTAL_AMOUNT_INSURED1,
			CIE_HT_BASIS1,
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			TOTAL_AMOUNT_INSURED2,
			CIE_HT_BASIS2,
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			TOTAL_AMOUNT_INSURED3,
			CIE_HT_BASIS3,
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			TOTAL_AMOUNT_INSURED4,
			CIE_HT_BASIS4,
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			TOTAL_AMOUNT_INSURED5,
			CIE_HT_BASIS5,
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			TOTAL_AMOUNT_INSURED6,
			CIE_HT_BASIS6,
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			TOTAL_AMOUNT_INSURED7,
			CIE_HT_BASIS7,
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			TOTAL_AMOUNT_INSURED8,
			CIE_HT_BASIS8,
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			CAST(
				CASE
					WHEN REPLACE( MONTHLY_SALARY, ',', '.' )!= '' THEN REPLACE( MONTHLY_SALARY, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			SALARY_CURRENCY,
			PERIOD,
			CAST(
				DAYS AS NUMBER
			),
			CAST(
				MONTHS AS NUMBER
			),
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			PARSEDATETIME( START_MOVEMENT, 'dd/MM/yyyy' ) START_MOVEMENT,
			PARSEDATETIME( END_MOVEMENT, 'dd/MM/yyyy' ) END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			)([*]
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
			)(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			)(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					MIN( YT2.START_MOVEMENT )
				FROM
					MVT_NUM YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )> PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' )
			)
		FROM
			PUBLIC.MVT "; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM(
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			MONTHLY_SALARY,
			SALARY_CURRENCY,
			PERIOD,
			DAYS,
			MONTHS,
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			START_MOVEMENT,
			END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			TOTAL_AMOUNT_INSURED1,
			CIE_HT_BASIS1,
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			TOTAL_AMOUNT_INSURED2,
			CIE_HT_BASIS2,
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			TOTAL_AMOUNT_INSURED3,
			CIE_HT_BASIS3,
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			TOTAL_AMOUNT_INSURED4,
			CIE_HT_BASIS4,
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			TOTAL_AMOUNT_INSURED5,
			CIE_HT_BASIS5,
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			TOTAL_AMOUNT_INSURED6,
			CIE_HT_BASIS6,
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			TOTAL_AMOUNT_INSURED7,
			CIE_HT_BASIS7,
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			TOTAL_AMOUNT_INSURED8,
			CIE_HT_BASIS8,
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			CAST(
				CASE
					WHEN REPLACE( MONTHLY_SALARY, ',', '.' )!= '' THEN REPLACE( MONTHLY_SALARY, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			SALARY_CURRENCY,
			PERIOD,
			CAST(
				DAYS AS NUMBER
			),
			CAST(
				MONTHS AS NUMBER
			),
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			PARSEDATETIME( START_MOVEMENT, 'dd/MM/yyyy' ) START_MOVEMENT,
			PARSEDATETIME( END_MOVEMENT, 'dd/MM/yyyy' ) END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			)(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
			)(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			)(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					MIN( yt2.start_movement )
				FROM
					mvt_num yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )> PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )
			)
		FROM
			PUBLIC.MVT [42000-193]
2017-01-16 22:29:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' THEN REPLACE(MONTHLY_SALARY,',','.') ELSE  '0' END  AS NUMBER), SALARY_CURRENCY,PERIOD ,CAST(DAYS AS NUMBER),CAST(MONTHS AS NUMBER),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  ELSE  '0' END  AS NUMBER) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  THEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ELSE  '0' END  AS NUMBER), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  THEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' THEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ELSE  '0' END  AS NUMBER) ([*] SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID ),  ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ), , ( SELECT MIN( YT2.START_MOVEMENT ) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') > PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) FROM PUBLIC.MVT "; SQL statement:
INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' then REPLACE(MONTHLY_SALARY,',','.') else  '0' end  as Number), SALARY_CURRENCY,PERIOD ,cast(DAYS as number),cast(MONTHS as number),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  else  '0' end  as Number) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  then REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') else  '0' end  as Number), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  then REPLACE(TOTAL_AMOUNT_INSURED2,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') else  '0' end  as Number), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED3,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') else  '0' end  as Number), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED4,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') else  '0' end  as Number), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED5,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') else  '0' end  as Number), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED6,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') else  '0' end  as Number), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' then REPLACE(TOTAL_AMOUNT_INSURED7,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') else  '0' end  as Number), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED8,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') else  '0' end  as Number) ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),  ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ), , ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') > PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) FROM PUBLIC.MVT [42000-193]
2017-01-16 22:29:47 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.openConnection(JDBCDataSource.java:159)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:73)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.<init>(JDBCDataSource.java:99)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:84)
	at org.jkiss.dbeaver.ext.generic.model.meta.GenericMetaModel.createDataSource(GenericMetaModel.java:86)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:153)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:702)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:74)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.runSync(ConnectJob.java:102)
	at org.jkiss.dbeaver.ui.actions.datasource.DataSourceHandler.connectToDataSource(DataSourceHandler.java:111)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.initConnection(DataSourceDescriptor.java:628)
	at org.jkiss.dbeaver.model.navigator.DBNDataSource.initializeNode(DBNDataSource.java:122)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:188)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:1)
	at org.jkiss.dbeaver.ui.navigator.NavigatorUtils.getNodeChildrenFiltered(NavigatorUtils.java:538)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:50)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:1)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:86)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:71)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 42 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/LaCie/ProjetDev/JavaEclipse/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 37 more
2017-01-16 22:31:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' THEN REPLACE(MONTHLY_SALARY,',','.') ELSE  '0' END  AS NUMBER), SALARY_CURRENCY,PERIOD ,CAST(DAYS AS NUMBER),CAST(MONTHS AS NUMBER),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  ELSE  '0' END  AS NUMBER) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  THEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') ELSE  '0' END  AS NUMBER), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  THEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' THEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' THEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') ELSE  '0' END  AS NUMBER), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' THEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') ELSE  '0' END  AS NUMBER), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' THEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') ELSE  '0' END  AS NUMBER) ([*] SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID ),  ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) ),  ( SELECT MIN( YT2.START_MOVEMENT ) FROM MVT YT2 WHERE YT2.WYCC_ID = YT1.WYCC_ID AND PARSEDATETIME(YT2.START_MOVEMENT,'dd/MM/yyyy') > PARSEDATETIME(YT1.END_MOVEMENT,'dd/MM/yyyy') ) FROM PUBLIC.MVT "; SQL statement:
INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' then REPLACE(MONTHLY_SALARY,',','.') else  '0' end  as Number), SALARY_CURRENCY,PERIOD ,cast(DAYS as number),cast(MONTHS as number),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  else  '0' end  as Number) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  then REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') else  '0' end  as Number), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  then REPLACE(TOTAL_AMOUNT_INSURED2,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') else  '0' end  as Number), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED3,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') else  '0' end  as Number), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED4,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') else  '0' end  as Number), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED5,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') else  '0' end  as Number), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED6,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') else  '0' end  as Number), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' then REPLACE(TOTAL_AMOUNT_INSURED7,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') else  '0' end  as Number), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED8,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') else  '0' end  as Number) ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),  ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ),  ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') > PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) FROM PUBLIC.MVT [42000-193]
2017-01-16 22:32:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT
	INTO
		PUBLIC.MVT_NUM(
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			MONTHLY_SALARY,
			SALARY_CURRENCY,
			PERIOD,
			DAYS,
			MONTHS,
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			START_MOVEMENT,
			END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			TOTAL_AMOUNT_INSURED1,
			CIE_HT_BASIS1,
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			TOTAL_AMOUNT_INSURED2,
			CIE_HT_BASIS2,
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			TOTAL_AMOUNT_INSURED3,
			CIE_HT_BASIS3,
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			TOTAL_AMOUNT_INSURED4,
			CIE_HT_BASIS4,
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			TOTAL_AMOUNT_INSURED5,
			CIE_HT_BASIS5,
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			TOTAL_AMOUNT_INSURED6,
			CIE_HT_BASIS6,
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			TOTAL_AMOUNT_INSURED7,
			CIE_HT_BASIS7,
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			TOTAL_AMOUNT_INSURED8,
			CIE_HT_BASIS8,
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			CAST(
				CASE
					WHEN REPLACE( MONTHLY_SALARY, ',', '.' )!= '' THEN REPLACE( MONTHLY_SALARY, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			SALARY_CURRENCY,
			PERIOD,
			CAST(
				DAYS AS NUMBER
			),
			CAST(
				MONTHS AS NUMBER
			),
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			PARSEDATETIME( START_MOVEMENT, 'dd/MM/yyyy' ) START_MOVEMENT,
			PARSEDATETIME( END_MOVEMENT, 'dd/MM/yyyy' ) END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			)([*]
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
			),
			(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			), "; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM(
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			MONTHLY_SALARY,
			SALARY_CURRENCY,
			PERIOD,
			DAYS,
			MONTHS,
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			START_MOVEMENT,
			END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			TOTAL_AMOUNT_INSURED1,
			CIE_HT_BASIS1,
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			TOTAL_AMOUNT_INSURED2,
			CIE_HT_BASIS2,
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			TOTAL_AMOUNT_INSURED3,
			CIE_HT_BASIS3,
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			TOTAL_AMOUNT_INSURED4,
			CIE_HT_BASIS4,
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			TOTAL_AMOUNT_INSURED5,
			CIE_HT_BASIS5,
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			TOTAL_AMOUNT_INSURED6,
			CIE_HT_BASIS6,
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			TOTAL_AMOUNT_INSURED7,
			CIE_HT_BASIS7,
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			TOTAL_AMOUNT_INSURED8,
			CIE_HT_BASIS8,
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT
			STRUCTURE_NAME,
			CERTIFICATE,
			CERTIFICATE_START,
			CERTIFICATE_RENEWAL,
			CERTIFICATE_CANCELLATION,
			AMENDMENT_START,
			AMENDMENT_END,
			WYCC_ID,
			CLAIMS_MANAGER_ID,
			GENDER,
			NAME,
			FIRST_NAME,
			DATE_OF_BIRTH,
			EMAIL,
			POSITION_TYPE,
			POSITIONCREW,
			CAST(
				CASE
					WHEN REPLACE( MONTHLY_SALARY, ',', '.' )!= '' THEN REPLACE( MONTHLY_SALARY, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			SALARY_CURRENCY,
			PERIOD,
			CAST(
				DAYS AS NUMBER
			),
			CAST(
				MONTHS AS NUMBER
			),
			FAMILY_COVERED,
			RETIREMENT_PLAN,
			PARSEDATETIME( START_MOVEMENT, 'dd/MM/yyyy' ) START_MOVEMENT,
			PARSEDATETIME( END_MOVEMENT, 'dd/MM/yyyy' ) END_MOVEMENT,
			EMPLOYER,
			CHILDREN,
			COUNTRY,
			NATIONALITY,
			COMPANY1,
			FORMULA1,
			POLICY_NUMBER1,
			CURRENCY1,
			EXCESS1,
			DURATION1,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED1, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS1, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY2,
			FORMULA2,
			POLICY_NUMBER2,
			CURRENCY2,
			EXCESS2,
			DURATION2,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED2, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS2, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY3,
			FORMULA3,
			POLICY_NUMBER3,
			CURRENCY3,
			EXCESS3,
			DURATION3,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED3, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS3, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY4,
			FORMULA4,
			POLICY_NUMBER4,
			CURRENCY4,
			EXCESS4,
			DURATION4,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED4, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS4, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY5,
			FORMULA5,
			POLICY_NUMBER5,
			CURRENCY5,
			EXCESS5,
			DURATION5,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED5, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS5, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY6,
			FORMULA,
			POLICY_NUMBER6,
			CURRENCY6,
			EXCESS6,
			DURATION6,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED6, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS6, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY7,
			FORMULA7,
			POLICY_NUMBER7,
			CURRENCY7,
			EXCESS67,
			DURATION7,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED7, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS7, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			COMPANY8,
			FORMULA8,
			POLICY_NUMBER8,
			CURRENCY8,
			EXCESS8,
			DURATION8,
			CAST(
				CASE
					WHEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )!= '' THEN REPLACE( TOTAL_AMOUNT_INSURED8, ',', '.' )
					ELSE '0'
				END AS NUMBER
			),
			CAST(
				CASE
					WHEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )!= '' THEN REPLACE( REPLACE( CIE_HT_BASIS8, '%', '' ), ',', '.' )
					ELSE '0'
				END AS NUMBER
			)(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
			),
			(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			), [42000-193]
2017-01-16 22:33:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' then REPLACE(MONTHLY_SALARY,',','.') else  '0' end  as Number), SALARY_CURRENCY,PERIOD ,cast(DAYS as number),cast(MONTHS as number),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  else  '0' end  as Number) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  then REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') else  '0' end  as Number), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  then REPLACE(TOTAL_AMOUNT_INSURED2,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') else  '0' end  as Number), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED3,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') else  '0' end  as Number), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED4,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') else  '0' end  as Number), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED5,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') else  '0' end  as Number), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED6,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') else  '0' end  as Number), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' then REPLACE(TOTAL_AMOUNT_INSURED7,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') else  '0' end  as Number), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED8,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') else  '0' end  as Number), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),  ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ),  ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') > PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) FROM PUBLIC.MVT [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:180)
	at org.h2.command.dml.Select.prepare(Select.java:856)
	at org.h2.engine.Session.optimizeQueryExpression(Session.java:233)
	at org.h2.expression.Subquery.optimize(Subquery.java:69)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.dml.Insert.prepare(Insert.java:280)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:126)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:258)
2017-01-16 22:34:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "DATE" constant "19/01/2016"; SQL statement:
INSERT INTO PUBLIC.MVT_NUM (STRUCTURE_NAME, CERTIFICATE, CERTIFICATE_START, CERTIFICATE_RENEWAL, CERTIFICATE_CANCELLATION, AMENDMENT_START, AMENDMENT_END, WYCC_ID, CLAIMS_MANAGER_ID, GENDER, NAME, FIRST_NAME, DATE_OF_BIRTH, EMAIL, POSITION_TYPE, POSITIONCREW, MONTHLY_SALARY, SALARY_CURRENCY, PERIOD, DAYS, MONTHS,  FAMILY_COVERED, RETIREMENT_PLAN, START_MOVEMENT, END_MOVEMENT, EMPLOYER, CHILDREN, COUNTRY, NATIONALITY, COMPANY1, FORMULA1, POLICY_NUMBER1, CURRENCY1,  EXCESS1, DURATION1, TOTAL_AMOUNT_INSURED1, CIE_HT_BASIS1, COMPANY2, FORMULA2, POLICY_NUMBER2, CURRENCY2, EXCESS2, DURATION2, TOTAL_AMOUNT_INSURED2, CIE_HT_BASIS2, COMPANY3, FORMULA3, POLICY_NUMBER3, CURRENCY3, EXCESS3, DURATION3, TOTAL_AMOUNT_INSURED3, CIE_HT_BASIS3, COMPANY4, FORMULA4, POLICY_NUMBER4, CURRENCY4, EXCESS4, DURATION4, TOTAL_AMOUNT_INSURED4, CIE_HT_BASIS4, COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, TOTAL_AMOUNT_INSURED5, CIE_HT_BASIS5, COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, TOTAL_AMOUNT_INSURED6, CIE_HT_BASIS6, COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, TOTAL_AMOUNT_INSURED7, CIE_HT_BASIS7, COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, TOTAL_AMOUNT_INSURED8,CIE_HT_BASIS8, NBREMVT,RANKMVT, NEXTMVT,DATEOFNEXTMVT)SELECT STRUCTURE_NAME,CERTIFICATE,CERTIFICATE_START,CERTIFICATE_RENEWAL,CERTIFICATE_CANCELLATION,AMENDMENT_START,AMENDMENT_END, WYCC_ID,CLAIMS_MANAGER_ID,GENDER,NAME,FIRST_NAME,DATE_OF_BIRTH,EMAIL,POSITION_TYPE,POSITIONCREW, CAST( CASE WHEN REPLACE(MONTHLY_SALARY,',','.')!='' then REPLACE(MONTHLY_SALARY,',','.') else  '0' end  as Number), SALARY_CURRENCY,PERIOD ,cast(DAYS as number),cast(MONTHS as number),FAMILY_COVERED,RETIREMENT_PLAN, PARSEDATETIME(START_MOVEMENT,'dd/MM/yyyy') START_MOVEMENT, PARSEDATETIME(END_MOVEMENT,'dd/MM/yyyy') END_MOVEMENT, EMPLOYER,CHILDREN,COUNTRY,NATIONALITY,COMPANY1,FORMULA1,POLICY_NUMBER1,CURRENCY1,EXCESS1,DURATION1, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED1,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED1,',','.')  else  '0' end  as Number) , CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') !=''  then REPLACE(REPLACE(CIE_HT_BASIS1,'%','') ,',','.') else  '0' end  as Number), COMPANY2,FORMULA2,POLICY_NUMBER2,CURRENCY2,EXCESS2,DURATION2, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED2,',','.')!=''  then REPLACE(TOTAL_AMOUNT_INSURED2,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS2,'%',''),',','.') else  '0' end  as Number), COMPANY3,FORMULA3,POLICY_NUMBER3,CURRENCY3,EXCESS3,DURATION3, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED3,',','.')!='' then REPLACE(TOTAL_AMOUNT_INSURED3,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS3,'%',''),',','.') else  '0' end  as Number), COMPANY4,FORMULA4,POLICY_NUMBER4,CURRENCY4,EXCESS4,DURATION4, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED4,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED4,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS4,'%',''),',','.') else  '0' end  as Number), COMPANY5, FORMULA5, POLICY_NUMBER5, CURRENCY5, EXCESS5, DURATION5, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED5,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED5,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS5,'%',''),',','.') else  '0' end  as Number), COMPANY6, FORMULA, POLICY_NUMBER6, CURRENCY6, EXCESS6, DURATION6, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED6,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED6,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS6,'%',''),',','.') else  '0' end  as Number), COMPANY7, FORMULA7, POLICY_NUMBER7, CURRENCY7, EXCESS67, DURATION7, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED7,',','.')  !='' then REPLACE(TOTAL_AMOUNT_INSURED7,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS7,'%',''),',','.') else  '0' end  as Number), COMPANY8, FORMULA8, POLICY_NUMBER8, CURRENCY8, EXCESS8, DURATION8, CAST( CASE WHEN REPLACE(TOTAL_AMOUNT_INSURED8,',','.') !='' then REPLACE(TOTAL_AMOUNT_INSURED8,',','.') else  '0' end  as Number), CAST( CASE WHEN REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') !='' then REPLACE(REPLACE(CIE_HT_BASIS8,'%',''),',','.') else  '0' end  as Number), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),  ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') < DATEADD( 'DAY', 1,  PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ), ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') = DATEADD( 'DAY', 1, PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) ),  ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id AND PARSEDATETIME(yt2.start_movement,'dd/MM/yyyy') > PARSEDATETIME(yt1.end_movement,'dd/MM/yyyy') ) FROM PUBLIC.MVT YT1 -- row #2 ('ENIGMA', '12278', '19/01/2012', '18/01/2018', '', '19/07/2015', '18/01/2016', '101', '3746734', 'Male', 'BRISSON', STRINGDECODE('St\ufffdphane'), '29/01/1974', 'stephane_bsn@hotmail.com', 'OFFICIER', 'Captain/Master', 12000, 'EUR', 'Annual', 18, 1, 'NO', 'NO', TIMESTAMP '2015-07-19 00:00:00.0', TIMESTAMP '2016-01-18 00:00:00.0', 'n/a', '0', 'France', 'French', 'AIG Luxembourg', 'PRESTIGES', 'L2015228', 'EUR', 'n/a', 'n/a', 500000, 791.8269, 'AIG Luxembourg', 'PRESTIGES', 'L2015228', 'EUR', 'n/a', 'n/a', 25000, 129.8077, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', 432000, 0.05, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', 432000, 0.13, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', 432000, 0.06, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', 'n/a', 'n/a', 432000, 0.15, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', '7', '365', 144000, 0.45, 'Anker Verzekeringen n.v.', 'Formula 3', '240026', 'EUR', '7', '365', 144000, 0.90, 5, 1, 1, '19/01/2016') [22007-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueDate.parse(ValueDate.java:81)
	at org.h2.value.Value.convertTo(Value.java:928)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.addRow(Insert.java:189)
	at org.h2.command.dml.Insert.insertRows(Insert.java:172)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.BusinessPlan.main(BusinessPlan.java:258)
Caused by: java.lang.IllegalArgumentException: 19/01/2016
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:313)
	at org.h2.value.ValueDate.parse(ValueDate.java:79)
	... 10 more
2017-01-16 22:36:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT
	INTO
		PUBLIC.MVT_NUM(
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT (
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
			),
			(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					COUNT(*)
				FROM
					MVT YT2
				WHERE
					YT2.WYCC_ID = YT1.WYCC_ID
					AND PARSEDATETIME( YT2.START_MOVEMENT, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( YT1.END_MOVEMENT, 'dd/MM/yyyy' ))
			), [*]"; expected "*, NOT, EXISTS, INTERSECTS"; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM(
			NBREMVT,
			RANKMVT,
			NEXTMVT,
			DATEOFNEXTMVT
		) SELECT (
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
			),
			(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			),
			(
				SELECT
					COUNT(*)
				FROM
					mvt yt2
				WHERE
					yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ))
			), [42001-193]
2017-01-16 22:37:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "YT1.WYCC_ID" not found; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM( NBREMVT, RANKMVT, NEXTMVT, DATEOFNEXTMVT
		) SELECT ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) ),
            ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )> PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ) )
		FROM
			PUBLIC.MVT [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:180)
	at org.h2.command.dml.Select.prepare(Select.java:856)
	at org.h2.engine.Session.optimizeQueryExpression(Session.java:233)
	at org.h2.expression.Subquery.optimize(Subquery.java:69)
	at org.h2.command.dml.Select.prepare(Select.java:853)
	at org.h2.command.dml.Insert.prepare(Insert.java:280)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 22:38:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "DATE" constant "19/01/2016"; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM( NBREMVT, RANKMVT, NEXTMVT, DATEOFNEXTMVT
		) SELECT ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) ),
            ( SELECT MIN( yt2.start_movement ) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )> PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' ) )
		FROM
			PUBLIC.MVT yt1 -- row #2 (5, 1, 1, '19/01/2016') [22007-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueDate.parse(ValueDate.java:81)
	at org.h2.value.Value.convertTo(Value.java:928)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.addRow(Insert.java:189)
	at org.h2.command.dml.Insert.insertRows(Insert.java:172)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.lang.IllegalArgumentException: 19/01/2016
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:313)
	at org.h2.value.ValueDate.parse(ValueDate.java:79)
	... 17 more
2017-01-16 22:39:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM( NBREMVT, RANKMVT, NEXTMVT, DATEOFNEXTMVT
		) SELECT ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) )
		FROM
			PUBLIC.MVT yt1 [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-16 22:39:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT
	INTO
		PUBLIC.MVT_NUM( NBREMVT, RANKMVT, NEXTMVT, DATEOFNEXTMVT
		) SELECT ( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )< DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) ),
			( SELECT COUNT(*) FROM mvt yt2 WHERE yt2.wycc_id = yt1.wycc_id
					AND PARSEDATETIME( yt2.start_movement, 'dd/MM/yyyy' )= DATEADD( 'DAY', 1, PARSEDATETIME( yt1.end_movement, 'dd/MM/yyyy' )) )
		FROM
			PUBLIC.MVT yt1 [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:345)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:138)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:344)
	at org.jkiss.dbeaver.runtime.sql.SQLQueryJob.extractData(SQLQueryJob.java:708)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:1682)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:92)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
2017-01-18 19:00:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO MVT  SELECT * FROM CSVREAD('/Users/dl/Documents/wkspace/ExcelJava/./tmp/tmp2099558843369080898.tmp') [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:126)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.WyccCsvFacturation.main(WyccCsvFacturation.java:102)
2017-01-18 19:02:42 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.WyccCsvFacturation.main(WyccCsvFacturation.java:94)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-18 19:21:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO MVT  SELECT * FROM CSVREAD('/Users/dl/Documents/wkspace/ExcelJava/./tmp/tmp790965643877442573.tmp') [21002-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:126)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.poi.dlas.WyccCsvFacturation.main(WyccCsvFacturation.java:102)
2017-01-18 19:23:36 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.WyccCsvFacturation.main(WyccCsvFacturation.java:94)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-18 19:24:47 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.jdbcx.JdbcDataSource.getJdbcConnection(JdbcDataSource.java:188)
	at org.h2.jdbcx.JdbcDataSource.getConnection(JdbcDataSource.java:159)
	at com.dlas.dao.h2db.getDatabase(h2db.java:41)
	at com.poi.dlas.WyccCsvFacturation.main(WyccCsvFacturation.java:94)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/dl/Documents/wkspace/ExcelJava/db/wyccdb.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 20 more
2017-01-23 20:10:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE PUBLIC.SETTINGSCELL (
	CELLROW INTEGER,
	CELLCOLUMN INTEGER,
	SHEETNUM[*]# INTEGER,
	HALIGNEMENT INTEGER,
	VALIGNEMENT INTEGER,
	BORDERBOTTOM INTEGER,
	BORDERTOP INTEGER,
	BORTERLEFT INTEGER,
	BORDERRIGHT INTEGER,
	DTATAFORMAT INTEGER,
	DATAFORMATSTRING VARCHAR(100),
	BAXKGROUNDCOLOR INTEGER,
	PATTERN INTEGER,
	FONTINDEX INTEGER,
	INDENTION DECIMAL(100,0),
	BORDERCOLORBOTTOM INTEGER,
	BORDERCOLORTOP INTEGER,
	BORDERCOLORRIGHT INTEGER,
	BORDERCOLORLEFT INTEGER
)"; SQL statement:
CREATE TABLE PUBLIC.SETTINGSCELL (
	CELLROW INTEGER,
	CELLCOLUMN INTEGER,
	SHEETNUM# INTEGER,
	HALIGNEMENT INTEGER,
	VALIGNEMENT INTEGER,
	BORDERBOTTOM INTEGER,
	BORDERTOP INTEGER,
	BORTERLEFT INTEGER,
	BORDERRIGHT INTEGER,
	DTATAFORMAT INTEGER,
	DATAFORMATSTRING VARCHAR(100),
	BAXKGROUNDCOLOR INTEGER,
	PATTERN INTEGER,
	FONTINDEX INTEGER,
	INDENTION DECIMAL(100,0),
	BORDERCOLORBOTTOM INTEGER,
	BORDERCOLORTOP INTEGER,
	BORDERCOLORRIGHT INTEGER,
	BORDERCOLORLEFT INTEGER
) [42000-193]
